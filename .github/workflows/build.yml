name: Build, Tag, and Release on Merge to Main

on:
  push:
    branches:
      - main
    tags:
      - "v*"

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-test:
    name: "Build and Test ðŸš€"
    runs-on: ubuntu-latest
    concurrency:
      group: build-test-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22.0"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        run: go test ./... -v
        env:
          GO111MODULE: on

  build-and-upload:
    needs: build-and-test
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        arch: [amd64, arm64, 386]
        exclude:
          - os: windows-latest
            arch: arm64
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-upload-${{ matrix.os }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22.0"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -o ephemyral-${{ runner.os }}-${{ matrix.arch }}

      - name: Generate Documentation
        run: go run main.go gendoc

      - name: Install zip on Windows
        if: runner.os == 'Windows'
        run: |
          choco install zip -y

      - name: Zip Documentation and README
        run: |
          zip -r documentation-${{ runner.os }}-${{ matrix.arch }}.zip README.md docs/
        shell: bash

      - name: Upload Documentation and README Artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation-${{ runner.os }}-${{ matrix.arch }}
          path: documentation-${{ runner.os }}-${{ matrix.arch }}.zip

      - name: Create Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ephemyral-${{ runner.os }}-${{ matrix.arch }}
          path: ephemyral-${{ runner.os }}-${{ matrix.arch }}

  tag-and-release-and-upload:
    needs: build-and-upload
    runs-on: ubuntu-latest
    concurrency:
      group: tag-release-upload-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"

      - name: Fetch Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Get Previous Tag and Create New Tag
        id: tags
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV
          NEW_TAG="v$(date +'%Y.%m.%d.%H%M%S')"
          git tag -a $NEW_TAG -m "Generated tag from GitHub Actions"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          git push --tags

      - name: Display NEW_TAG
        run: |
          echo "Generated New Tag: ${{ env.NEW_TAG }}"

      - name: Generate Release Notes
        run: |
          RELEASE_NOTES=$(git log ${{ env.PREV_TAG }}..${{ env.NEW_TAG }} --oneline)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Download Release Artifact (macOS - amd64)
        uses: actions/download-artifact@v4
        with:
          name: ephemyral-macOS-amd64
          path: macos

      - name: Download Release Artifact (macOS - arm64)
        uses: actions/download-artifact@v4
        with:
          name: ephemyral-macOS-arm64
          path: macos

      - name: Download Release Artifact (macOS - 386)
        uses: actions/download-artifact@v4
        with:
          name: ephemyral-macOS-386
          path: macos

      - name: Download Release Artifact (Linux - amd64)
        uses: actions/download-artifact@v4
        with:
          name: ephemyral-Linux-amd64
          path: ubuntu

      - name: Download Release Artifact (Linux - arm64)
        uses: actions/download-artifact@v4
        with:
          name: ephemyral-Linux-arm64
          path: ubuntu

      - name: Download Release Artifact (Linux - 386)
        uses: actions/download-artifact@v4
        with:
          name: ephemyral-Linux-386
          path: ubuntu

      - name: Download Release Artifact (Windows - amd64)
        uses: actions/download-artifact@v4
        with:
          name: ephemyral-Windows-amd64
          path: windows

      - name: Download Release Artifact (Windows - 386)
        uses: actions/download-artifact@v4
        with:
          name: ephemyral-Windows-386
          path: windows

      - name: Download Documentation Artifact (macOS - amd64)
        uses: actions/download-artifact@v4
        with:
          name: documentation-macOS-amd64
          path: macos

      - name: Download Documentation Artifact (macOS - arm64)
        uses: actions/download-artifact@v4
        with:
          name: documentation-macOS-arm64
          path: macos

      - name: Download Documentation Artifact (macOS - 386)
        uses: actions/download-artifact@v4
        with:
          name: documentation-macOS-386
          path: macos

      - name: Download Documentation Artifact (Linux - amd64)
        uses: actions/download-artifact@v4
        with:
          name: documentation-Linux-amd64
          path: ubuntu

      - name: Download Documentation Artifact (Linux - arm64)
        uses: actions/download-artifact@v4
        with:
          name: documentation-Linux-arm64
          path: ubuntu

      - name: Download Documentation Artifact (Linux - 386)
        uses: actions/download-artifact@v4
        with:
          name: documentation-Linux-386
          path: ubuntu

      - name: Download Documentation Artifact (Windows - amd64)
        uses: actions/download-artifact@v4
        with:
          name: documentation-Windows-amd64
          path: windows

      - name: Download Documentation Artifact (Windows - 386)
        uses: actions/download-artifact@v4
        with:
          name: documentation-Windows-386
          path: windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: |
            Changes in this Release:
            - ${{ env.RELEASE_NOTES }}

      - name: Upload Release Asset (macOS - amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos/ephemyral-macOS-amd64
          asset_name: ephemyral-macOS-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (macOS - arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos/ephemyral-macOS-arm64
          asset_name: ephemyral-macOS-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (macOS - 386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos/ephemyral-macOS-386
          asset_name: ephemyral-macOS-386
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux - amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu/ephemyral-Linux-amd64
          asset_name: ephemyral-Linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux - arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu/ephemyral-Linux-arm64
          asset_name: ephemyral-Linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Linux - 386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu/ephemyral-Linux-386
          asset_name: ephemyral-Linux-386
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows - amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows/ephemyral-Windows-amd64
          asset_name: ephemyral-Windows-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows-386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows/ephemyral-Windows-386
          asset_name: ephemyral-Windows-386
          asset_content_type: application/octet-stream

      - name: Upload Documentation Asset (macOS - amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos/documentation-macOS-amd64.zip
          asset_name: documentation-macOS-amd64.zip
          asset_content_type: application/zip

      - name: Upload Documentation Asset (macOS - arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos/documentation-macOS-arm64.zip
          asset_name: documentation-macOS-arm64.zip
          asset_content_type: application/zip

      - name: Upload Documentation Asset (macOS - 386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos/documentation-macOS-386.zip
          asset_name: documentation-macOS-386.zip
          asset_content_type: application/zip

      - name: Upload Documentation Asset (Linux - amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu/documentation-Linux-amd64.zip
          asset_name: documentation-Linux-amd64.zip
          asset_content_type: application/zip

      - name: Upload Documentation Asset (Linux - arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu/documentation-Linux-arm64.zip
          asset_name: documentation-Linux-arm64.zip
          asset_content_type: application/zip

      - name: Upload Documentation Asset (Linux - 386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ubuntu/documentation-Linux-386.zip
          asset_name: documentation-Linux-386.zip
          asset_content_type: application/zip

      - name: Upload Documentation Asset (Windows - amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows/documentation-Windows-amd64.zip
          asset_name: documentation-Windows-amd64.zip
          asset_content_type: application/zip

      - name: Upload Documentation Asset (Windows - 386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows/documentation-Windows-386.zip
          asset_name: documentation-Windows-386.zip
          asset_content_type: application/zip
