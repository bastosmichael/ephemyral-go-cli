name: Build and Tag on Merge to Main

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-test:
    name: 'Build and Test ðŸš€'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.0'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Test
        run: |
          go test ./... -v
        env:
          GO111MODULE: on

  build-and-tag:
    needs: build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.0'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -o ephemyral-${{ matrix.os }}-${{ github.sha }}

      - name: Create Tag
        if: ${{ github.ref == 'refs/heads/main' && matrix.os == 'macos-latest' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a v${{ github.run_number }} -m "Generated tag from GitHub Actions"
          git push --tags

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ephemyral-${{ matrix.os }}
          path: ephemyral-${{ matrix.os }}-${{ github.sha }}

  create-release:
    needs: build-and-tag
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      
      - name: Fetch Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      
      - name: Get Previous Tag
        id: prev_tag
        run: |
          echo "PREV_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))" >> $GITHUB_ENV
      
      - name: Generate Release Notes
        id: generate_notes
        run: |
          PREV_TAG=${{ env.PREV_TAG }}
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          echo "Release notes between tags $PREV_TAG and $CURRENT_TAG:"
          RELEASE_NOTES=$(git log $PREV_TAG..$CURRENT_TAG --oneline)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Changes in this Release:
            ${{ env.RELEASE_NOTES }}
